from fastapi import APIRouter
from prometheus_client import Counter, Histogram, generate_latest
from ..models import MetricsResponse

router = APIRouter()

# Prometheus metrics
FEED_GENERATIONS = Counter(
    'atf_feeds_generated_total',
    'Total number of feeds generated'
)

VALIDATIONS = Counter(
    'atf_validations_total',
    'Total number of feed validations'
)

RESPONSE_TIME = Histogram(
    'atf_request_duration_seconds',
    'Request duration in seconds'
)

ERROR_COUNTER = Counter(
    'atf_errors_total',
    'Total number of errors'
)

@router.get("")
async def metrics():
    """Prometheus metrics endpoint."""
    return generate_latest()

@router.get("/summary", response_model=MetricsResponse)
async def metrics_summary():
    """Get service metrics summary."""
    feed_count = FEED_GENERATIONS._value.get()
    validation_count = VALIDATIONS._value.get()
    error_count = ERROR_COUNTER._value.get()
    total_requests = feed_count + validation_count
    
    return MetricsResponse(
        feeds_total=int(feed_count),
        validations_total=int(validation_count),
        error_rate=error_count / total_requests if total_requests > 0 else 0.0,
        avg_response_time=RESPONSE_TIME._sum.get() / RESPONSE_TIME._count.get() 
            if RESPONSE_TIME._count.get() > 0 else 0.0
    )